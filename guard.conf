# port range
min_port = 1
max_port = 40000

# exclude ports, normal ports that may get hit by mistake by remote clients
# shouldn't case alarms
exclude_ports = 22
exclude_ports = 80
exclude_ports = 443

# ignore ip
# default ignore 127.0.0.1/8 and all local address
#ignore_ip = 172.16.0.0/16
ignore_ip = 192.168.10.1
ignore_ip = 10.0.0.0/8

# in kill_route and kill_run_cmd
# $TARGET$ will be substituted with the attacking host IP
# $PORT$ will be substituted with the port that the attacker try to connect last time

# kill route
kill_route = /sbin/iptables -I INPUT -s $TARGET$ -j DROP

# kill run command
kill_run_cmd = echo $TARGET$:$PORT$ >>/tmp/portguard.log

# notify url
kill_notify_url = http://127.0.0.1:8080/hole?target=$TARGET$&port=$PORT$

# scan trigger
# how many *different* ports could be scan before portguard reacts
# *this option is different from portsentry, portsentry count scan at the same port*
# *for example:*
# *port 1000-1024 is unused*
# *if a host hit port 1000 ten times, portsentry set host scan_trigger=10*
# *at the same situation, portguard set host scan_trigger=1*
# *hit same port multiple times is ignored by portguard
# 0 means react immediately
scan_trigger = 5

# log file
alarm_log = /tmp/portguard_alarm.log
blocked_log = /tmp/portguard_blocked.log

